{
  "env": {
    "es2022": true,
    "node": true,
    "jest/globals": true
  },
  "globals": {
    "NodeJS": true
  },
  "extends": ["airbnb-base", "prettier"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "prettier", "jest", "eslint-plugin-tsdoc"],
  "rules": {
    "tsdoc/syntax": "warn",
    "import/no-unresolved": 0,
    "import/extensions": 0,
    "no-underscore-dangle": 0,
    "no-bitwise": 0,
    "consistent-return": "off",
    "no-unused-vars": "off",
    "operator-linebreak": 0,
    "no-unexpected-multiline": 0,
    // Disabled max-len for now, due to prettier issues
    // https://github.com/prettier/prettier/issues/3806
    "max-len": 0,
    // There is a bug when re-exporting defaults
    // so temporarily we won't restrict the word 'default'
    // https://github.com/eslint/eslint/issues/15617
    "no-restricted-exports": [
      "error",
      {
        "restrictedNamedExports": [
          // "default",
          "then"
        ]
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      // {
      //   "selector": "ForOfStatement",
      //   "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
      // },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "@typescript-eslint/no-unused-vars": ["error"],
    "prettier/prettier": [
      2,
      {
        "printWidth": 85,
        "singleQuote": true,
        "quoteProps": "as-needed",
        "trailingComma": "all",
        "endOfLine": "lf",
        "arrowParens": "always"
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  }
}
